openapi: 3.0.0
info:
  title: Todo App API
  version: 1.0.0
  description: API для управления задачами
servers:
  - url: http://localhost:{port}
    description: Local server
    variables:
      port:
        enum:
          - '8000'
          - '3000'
        default: '8000'

  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:
  /todos:
    get:
      summary: Получение всех задач
      operationId: getTodos
      responses:
        "200":
          description: Успешное получение задач
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
        "500":
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Создание новой задачи
      operationId: createTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTodo"
      responses:
        "201":
          description: Задача создана
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "500":
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
  /todos/{id}:
    put:
      summary: Обновление задачи по ID
      operationId: updateTodo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTodo"
      responses:
        "200":
          description: Задача успешно обновлена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Задача не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Удаление задачи по ID
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Задача успешно удалена
        "404":
          description: Задача не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    NewTodo:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        description:
          type: string

    UpdateTodo:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean

    Error:
      type: object
      properties:
        error:
          type: string
